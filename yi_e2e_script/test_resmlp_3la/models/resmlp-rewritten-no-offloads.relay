#[version = "0.0.5"]
def @main(%input_0: Tensor[(1, 3, 32, 32), float32], %v1_weight: Tensor[(384, 768), float32], %v1_bias: Tensor[(384), float32], %v2_0_affine_g: Tensor[(1, 1, 384), float32], %v2_0_affine_b: Tensor[(1, 1, 384), float32], %v2_0_fn_weight: Tensor[(4, 4, 1), float32], %v2_0_fn_bias: Tensor[(4), float32], %v2_0_scale: Tensor[(1, 1, 384), float32], %v2_1_affine_g: Tensor[(1, 1, 384), float32], %v2_1_affine_b: Tensor[(1, 1, 384), float32], %v2_1_fn_0_weight: Tensor[(1536, 384), float32], %v2_1_fn_0_bias: Tensor[(1536), float32], %v2_1_fn_2_weight: Tensor[(384, 1536), float32], %v2_1_fn_2_bias: Tensor[(384), float32], %v2_1_scale: Tensor[(1, 1, 384), float32], %v3_0_affine_g: Tensor[(1, 1, 384), float32], %v3_0_affine_b: Tensor[(1, 1, 384), float32], %v3_0_fn_weight: Tensor[(4, 4, 1), float32], %v3_0_fn_bias: Tensor[(4), float32], %v3_0_scale: Tensor[(1, 1, 384), float32], %v3_1_affine_g: Tensor[(1, 1, 384), float32], %v3_1_affine_b: Tensor[(1, 1, 384), float32], %v3_1_fn_0_weight: Tensor[(1536, 384), float32], %v3_1_fn_0_bias: Tensor[(1536), float32], %v3_1_fn_2_weight: Tensor[(384, 1536), float32], %v3_1_fn_2_bias: Tensor[(384), float32], %v3_1_scale: Tensor[(1, 1, 384), float32], %v4_0_affine_g: Tensor[(1, 1, 384), float32], %v4_0_affine_b: Tensor[(1, 1, 384), float32], %v4_0_fn_weight: Tensor[(4, 4, 1), float32], %v4_0_fn_bias: Tensor[(4), float32], %v4_0_scale: Tensor[(1, 1, 384), float32], %v4_1_affine_g: Tensor[(1, 1, 384), float32], %v4_1_affine_b: Tensor[(1, 1, 384), float32], %v4_1_fn_0_weight: Tensor[(1536, 384), float32], %v4_1_fn_0_bias: Tensor[(1536), float32], %v4_1_fn_2_weight: Tensor[(384, 1536), float32], %v4_1_fn_2_bias: Tensor[(384), float32], %v4_1_scale: Tensor[(1, 1, 384), float32], %v5_0_affine_g: Tensor[(1, 1, 384), float32], %v5_0_affine_b: Tensor[(1, 1, 384), float32], %v5_0_fn_weight: Tensor[(4, 4, 1), float32], %v5_0_fn_bias: Tensor[(4), float32], %v5_0_scale: Tensor[(1, 1, 384), float32], %v5_1_affine_g: Tensor[(1, 1, 384), float32], %v5_1_affine_b: Tensor[(1, 1, 384), float32], %v5_1_fn_0_weight: Tensor[(1536, 384), float32], %v5_1_fn_0_bias: Tensor[(1536), float32], %v5_1_fn_2_weight: Tensor[(384, 1536), float32], %v5_1_fn_2_bias: Tensor[(384), float32], %v5_1_scale: Tensor[(1, 1, 384), float32], %v6_0_affine_g: Tensor[(1, 1, 384), float32], %v6_0_affine_b: Tensor[(1, 1, 384), float32], %v6_0_fn_weight: Tensor[(4, 4, 1), float32], %v6_0_fn_bias: Tensor[(4), float32], %v6_0_scale: Tensor[(1, 1, 384), float32], %v6_1_affine_g: Tensor[(1, 1, 384), float32], %v6_1_affine_b: Tensor[(1, 1, 384), float32], %v6_1_fn_0_weight: Tensor[(1536, 384), float32], %v6_1_fn_0_bias: Tensor[(1536), float32], %v6_1_fn_2_weight: Tensor[(384, 1536), float32], %v6_1_fn_2_bias: Tensor[(384), float32], %v6_1_scale: Tensor[(1, 1, 384), float32], %v7_0_affine_g: Tensor[(1, 1, 384), float32], %v7_0_affine_b: Tensor[(1, 1, 384), float32], %v7_0_fn_weight: Tensor[(4, 4, 1), float32], %v7_0_fn_bias: Tensor[(4), float32], %v7_0_scale: Tensor[(1, 1, 384), float32], %v7_1_affine_g: Tensor[(1, 1, 384), float32], %v7_1_affine_b: Tensor[(1, 1, 384), float32], %v7_1_fn_0_weight: Tensor[(1536, 384), float32], %v7_1_fn_0_bias: Tensor[(1536), float32], %v7_1_fn_2_weight: Tensor[(384, 1536), float32], %v7_1_fn_2_bias: Tensor[(384), float32], %v7_1_scale: Tensor[(1, 1, 384), float32], %v8_0_affine_g: Tensor[(1, 1, 384), float32], %v8_0_affine_b: Tensor[(1, 1, 384), float32], %v8_0_fn_weight: Tensor[(4, 4, 1), float32], %v8_0_fn_bias: Tensor[(4), float32], %v8_0_scale: Tensor[(1, 1, 384), float32], %v8_1_affine_g: Tensor[(1, 1, 384), float32], %v8_1_affine_b: Tensor[(1, 1, 384), float32], %v8_1_fn_0_weight: Tensor[(1536, 384), float32], %v8_1_fn_0_bias: Tensor[(1536), float32], %v8_1_fn_2_weight: Tensor[(384, 1536), float32], %v8_1_fn_2_bias: Tensor[(384), float32], %v8_1_scale: Tensor[(1, 1, 384), float32], %v9_0_affine_g: Tensor[(1, 1, 384), float32], %v9_0_affine_b: Tensor[(1, 1, 384), float32], %v9_0_fn_weight: Tensor[(4, 4, 1), float32], %v9_0_fn_bias: Tensor[(4), float32], %v9_0_scale: Tensor[(1, 1, 384), float32], %v9_1_affine_g: Tensor[(1, 1, 384), float32], %v9_1_affine_b: Tensor[(1, 1, 384), float32], %v9_1_fn_0_weight: Tensor[(1536, 384), float32], %v9_1_fn_0_bias: Tensor[(1536), float32], %v9_1_fn_2_weight: Tensor[(384, 1536), float32], %v9_1_fn_2_bias: Tensor[(384), float32], %v9_1_scale: Tensor[(1, 1, 384), float32], %v10_0_affine_g: Tensor[(1, 1, 384), float32], %v10_0_affine_b: Tensor[(1, 1, 384), float32], %v10_0_fn_weight: Tensor[(4, 4, 1), float32], %v10_0_fn_bias: Tensor[(4), float32], %v10_0_scale: Tensor[(1, 1, 384), float32], %v10_1_affine_g: Tensor[(1, 1, 384), float32], %v10_1_affine_b: Tensor[(1, 1, 384), float32], %v10_1_fn_0_weight: Tensor[(1536, 384), float32], %v10_1_fn_0_bias: Tensor[(1536), float32], %v10_1_fn_2_weight: Tensor[(384, 1536), float32], %v10_1_fn_2_bias: Tensor[(384), float32], %v10_1_scale: Tensor[(1, 1, 384), float32], %v11_0_affine_g: Tensor[(1, 1, 384), float32], %v11_0_affine_b: Tensor[(1, 1, 384), float32], %v11_0_fn_weight: Tensor[(4, 4, 1), float32], %v11_0_fn_bias: Tensor[(4), float32], %v11_0_scale: Tensor[(1, 1, 384), float32], %v11_1_affine_g: Tensor[(1, 1, 384), float32], %v11_1_affine_b: Tensor[(1, 1, 384), float32], %v11_1_fn_0_weight: Tensor[(1536, 384), float32], %v11_1_fn_0_bias: Tensor[(1536), float32], %v11_1_fn_2_weight: Tensor[(384, 1536), float32], %v11_1_fn_2_bias: Tensor[(384), float32], %v11_1_scale: Tensor[(1, 1, 384), float32], %v12_0_affine_g: Tensor[(1, 1, 384), float32], %v12_0_affine_b: Tensor[(1, 1, 384), float32], %v12_0_fn_weight: Tensor[(4, 4, 1), float32], %v12_0_fn_bias: Tensor[(4), float32], %v12_0_scale: Tensor[(1, 1, 384), float32], %v12_1_affine_g: Tensor[(1, 1, 384), float32], %v12_1_affine_b: Tensor[(1, 1, 384), float32], %v12_1_fn_0_weight: Tensor[(1536, 384), float32], %v12_1_fn_0_bias: Tensor[(1536), float32], %v12_1_fn_2_weight: Tensor[(384, 1536), float32], %v12_1_fn_2_bias: Tensor[(384), float32], %v12_1_scale: Tensor[(1, 1, 384), float32], %v13_0_affine_g: Tensor[(1, 1, 384), float32], %v13_0_affine_b: Tensor[(1, 1, 384), float32], %v13_0_fn_weight: Tensor[(4, 4, 1), float32], %v13_0_fn_bias: Tensor[(4), float32], %v13_0_scale: Tensor[(1, 1, 384), float32], %v13_1_affine_g: Tensor[(1, 1, 384), float32], %v13_1_affine_b: Tensor[(1, 1, 384), float32], %v13_1_fn_0_weight: Tensor[(1536, 384), float32], %v13_1_fn_0_bias: Tensor[(1536), float32], %v13_1_fn_2_weight: Tensor[(384, 1536), float32], %v13_1_fn_2_bias: Tensor[(384), float32], %v13_1_scale: Tensor[(1, 1, 384), float32], %v14_g: Tensor[(1, 1, 384), float32], %v14_b: Tensor[(1, 1, 384), float32], %v16_weight: Tensor[(10, 384), float32], %v16_bias: Tensor[(10), float32]) -> Tensor[(1, 10), float32] {
  let %var_2: Tensor[(1, 3, 2, 16, 2, 16), float32] = reshape(%input_0, newshape=[1, 3, 2, 16, 2, 16]) /* ty=Tensor[(1, 3, 2, 16, 2, 16), float32] */;
  let %var_3: Tensor[(1, 2, 2, 16, 16, 3), float32] = transpose(%var_2, axes=[0, 2, 4, 3, 5, 1]) /* ty=Tensor[(1, 2, 2, 16, 16, 3), float32] */;
  let %var_4: Tensor[(1, 4, 768), float32] = reshape(%var_3, newshape=[1, 4, 768]) /* ty=Tensor[(1, 4, 768), float32] */;
  let %var_6: Tensor[(768, 384), float32] = transpose(%v1_weight, axes=[1, 0]) /* ty=Tensor[(768, 384), float32] */;
  let %var_8: Tensor[(4, 768), float32] = reshape(%var_4, newshape=[4, 768]) /* ty=Tensor[(4, 768), float32] */;
  let %var_9: Tensor[(384, 768), float32] = transpose(%var_6, axes=[1, 0]) /* ty=Tensor[(384, 768), float32] */;
  %0 = nn.dense(%var_8, %var_9, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_10: Tensor[(4, 384), float32] = nn.bias_add(%0, %v1_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_12: Tensor[(1, 4, 384), float32] = reshape(%var_10, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_14: Tensor[(1, 4, 384), float32] = multiply(%var_12, %v2_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_16: Tensor[(1, 4, 384), float32] = add(%var_14, %v2_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_18: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_16, %v2_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_20: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_18, %v2_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_21: Tensor[(1, 4, 384), float32] = multiply(%var_20, %v2_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_23: Tensor[(1, 4, 384), float32] = add(%var_21, %var_12) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_25: Tensor[(1, 4, 384), float32] = multiply(%var_23, %v2_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_26: Tensor[(1, 4, 384), float32] = add(%var_25, %v2_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_28: Tensor[(384, 1536), float32] = transpose(%v2_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_30: Tensor[(4, 384), float32] = reshape(%var_26, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_31: Tensor[(1536, 384), float32] = transpose(%var_28, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %1 = nn.dense(%var_30, %var_31, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_32: Tensor[(4, 1536), float32] = nn.bias_add(%1, %v2_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_33: Tensor[(1, 4, 1536), float32] = reshape(%var_32, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_34: Tensor[(1, 4, 1536), float32] = multiply(%var_33, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_35: Tensor[(1, 4, 1536), float32] = erf(%var_34) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_36: Tensor[(1, 4, 1536), float32] = multiply(%var_35, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_37: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_36) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_38: Tensor[(1, 4, 1536), float32] = multiply(%var_33, %var_37) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_40: Tensor[(1536, 384), float32] = transpose(%v2_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_42: Tensor[(4, 1536), float32] = reshape(%var_38, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_43: Tensor[(384, 1536), float32] = transpose(%var_40, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %2 = nn.dense(%var_42, %var_43, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_44: Tensor[(4, 384), float32] = nn.bias_add(%2, %v2_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_46: Tensor[(1, 4, 384), float32] = reshape(%var_44, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_47: Tensor[(1, 4, 384), float32] = multiply(%var_46, %v2_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_49: Tensor[(1, 4, 384), float32] = add(%var_47, %var_23) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_51: Tensor[(1, 4, 384), float32] = multiply(%var_49, %v3_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_53: Tensor[(1, 4, 384), float32] = add(%var_51, %v3_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_55: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_53, %v3_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_57: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_55, %v3_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_58: Tensor[(1, 4, 384), float32] = multiply(%var_57, %v3_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_60: Tensor[(1, 4, 384), float32] = add(%var_58, %var_49) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_62: Tensor[(1, 4, 384), float32] = multiply(%var_60, %v3_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_63: Tensor[(1, 4, 384), float32] = add(%var_62, %v3_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_65: Tensor[(384, 1536), float32] = transpose(%v3_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_67: Tensor[(4, 384), float32] = reshape(%var_63, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_68: Tensor[(1536, 384), float32] = transpose(%var_65, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %3 = nn.dense(%var_67, %var_68, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_69: Tensor[(4, 1536), float32] = nn.bias_add(%3, %v3_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_70: Tensor[(1, 4, 1536), float32] = reshape(%var_69, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_71: Tensor[(1, 4, 1536), float32] = multiply(%var_70, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_72: Tensor[(1, 4, 1536), float32] = erf(%var_71) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_73: Tensor[(1, 4, 1536), float32] = multiply(%var_72, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_74: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_73) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_75: Tensor[(1, 4, 1536), float32] = multiply(%var_70, %var_74) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_77: Tensor[(1536, 384), float32] = transpose(%v3_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_79: Tensor[(4, 1536), float32] = reshape(%var_75, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_80: Tensor[(384, 1536), float32] = transpose(%var_77, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %4 = nn.dense(%var_79, %var_80, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_81: Tensor[(4, 384), float32] = nn.bias_add(%4, %v3_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_83: Tensor[(1, 4, 384), float32] = reshape(%var_81, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_84: Tensor[(1, 4, 384), float32] = multiply(%var_83, %v3_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_86: Tensor[(1, 4, 384), float32] = add(%var_84, %var_60) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_88: Tensor[(1, 4, 384), float32] = multiply(%var_86, %v4_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_90: Tensor[(1, 4, 384), float32] = add(%var_88, %v4_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_92: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_90, %v4_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_94: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_92, %v4_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_95: Tensor[(1, 4, 384), float32] = multiply(%var_94, %v4_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_97: Tensor[(1, 4, 384), float32] = add(%var_95, %var_86) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_99: Tensor[(1, 4, 384), float32] = multiply(%var_97, %v4_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_100: Tensor[(1, 4, 384), float32] = add(%var_99, %v4_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_102: Tensor[(384, 1536), float32] = transpose(%v4_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_104: Tensor[(4, 384), float32] = reshape(%var_100, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_105: Tensor[(1536, 384), float32] = transpose(%var_102, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %5 = nn.dense(%var_104, %var_105, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_106: Tensor[(4, 1536), float32] = nn.bias_add(%5, %v4_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_107: Tensor[(1, 4, 1536), float32] = reshape(%var_106, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_108: Tensor[(1, 4, 1536), float32] = multiply(%var_107, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_109: Tensor[(1, 4, 1536), float32] = erf(%var_108) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_110: Tensor[(1, 4, 1536), float32] = multiply(%var_109, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_111: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_110) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_112: Tensor[(1, 4, 1536), float32] = multiply(%var_107, %var_111) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_114: Tensor[(1536, 384), float32] = transpose(%v4_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_116: Tensor[(4, 1536), float32] = reshape(%var_112, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_117: Tensor[(384, 1536), float32] = transpose(%var_114, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %6 = nn.dense(%var_116, %var_117, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_118: Tensor[(4, 384), float32] = nn.bias_add(%6, %v4_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_120: Tensor[(1, 4, 384), float32] = reshape(%var_118, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_121: Tensor[(1, 4, 384), float32] = multiply(%var_120, %v4_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_123: Tensor[(1, 4, 384), float32] = add(%var_121, %var_97) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_125: Tensor[(1, 4, 384), float32] = multiply(%var_123, %v5_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_127: Tensor[(1, 4, 384), float32] = add(%var_125, %v5_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_129: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_127, %v5_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_131: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_129, %v5_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_132: Tensor[(1, 4, 384), float32] = multiply(%var_131, %v5_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_134: Tensor[(1, 4, 384), float32] = add(%var_132, %var_123) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_136: Tensor[(1, 4, 384), float32] = multiply(%var_134, %v5_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_137: Tensor[(1, 4, 384), float32] = add(%var_136, %v5_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_139: Tensor[(384, 1536), float32] = transpose(%v5_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_141: Tensor[(4, 384), float32] = reshape(%var_137, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_142: Tensor[(1536, 384), float32] = transpose(%var_139, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %7 = nn.dense(%var_141, %var_142, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_143: Tensor[(4, 1536), float32] = nn.bias_add(%7, %v5_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_144: Tensor[(1, 4, 1536), float32] = reshape(%var_143, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_145: Tensor[(1, 4, 1536), float32] = multiply(%var_144, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_146: Tensor[(1, 4, 1536), float32] = erf(%var_145) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_147: Tensor[(1, 4, 1536), float32] = multiply(%var_146, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_148: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_147) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_149: Tensor[(1, 4, 1536), float32] = multiply(%var_144, %var_148) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_151: Tensor[(1536, 384), float32] = transpose(%v5_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_153: Tensor[(4, 1536), float32] = reshape(%var_149, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_154: Tensor[(384, 1536), float32] = transpose(%var_151, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %8 = nn.dense(%var_153, %var_154, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_155: Tensor[(4, 384), float32] = nn.bias_add(%8, %v5_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_157: Tensor[(1, 4, 384), float32] = reshape(%var_155, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_158: Tensor[(1, 4, 384), float32] = multiply(%var_157, %v5_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_160: Tensor[(1, 4, 384), float32] = add(%var_158, %var_134) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_162: Tensor[(1, 4, 384), float32] = multiply(%var_160, %v6_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_164: Tensor[(1, 4, 384), float32] = add(%var_162, %v6_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_166: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_164, %v6_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_168: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_166, %v6_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_169: Tensor[(1, 4, 384), float32] = multiply(%var_168, %v6_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_171: Tensor[(1, 4, 384), float32] = add(%var_169, %var_160) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_173: Tensor[(1, 4, 384), float32] = multiply(%var_171, %v6_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_174: Tensor[(1, 4, 384), float32] = add(%var_173, %v6_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_176: Tensor[(384, 1536), float32] = transpose(%v6_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_178: Tensor[(4, 384), float32] = reshape(%var_174, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_179: Tensor[(1536, 384), float32] = transpose(%var_176, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %9 = nn.dense(%var_178, %var_179, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_180: Tensor[(4, 1536), float32] = nn.bias_add(%9, %v6_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_181: Tensor[(1, 4, 1536), float32] = reshape(%var_180, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_182: Tensor[(1, 4, 1536), float32] = multiply(%var_181, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_183: Tensor[(1, 4, 1536), float32] = erf(%var_182) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_184: Tensor[(1, 4, 1536), float32] = multiply(%var_183, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_185: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_184) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_186: Tensor[(1, 4, 1536), float32] = multiply(%var_181, %var_185) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_188: Tensor[(1536, 384), float32] = transpose(%v6_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_190: Tensor[(4, 1536), float32] = reshape(%var_186, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_191: Tensor[(384, 1536), float32] = transpose(%var_188, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %10 = nn.dense(%var_190, %var_191, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_192: Tensor[(4, 384), float32] = nn.bias_add(%10, %v6_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_194: Tensor[(1, 4, 384), float32] = reshape(%var_192, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_195: Tensor[(1, 4, 384), float32] = multiply(%var_194, %v6_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_197: Tensor[(1, 4, 384), float32] = add(%var_195, %var_171) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_199: Tensor[(1, 4, 384), float32] = multiply(%var_197, %v7_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_201: Tensor[(1, 4, 384), float32] = add(%var_199, %v7_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_203: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_201, %v7_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_205: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_203, %v7_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_206: Tensor[(1, 4, 384), float32] = multiply(%var_205, %v7_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_208: Tensor[(1, 4, 384), float32] = add(%var_206, %var_197) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_210: Tensor[(1, 4, 384), float32] = multiply(%var_208, %v7_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_211: Tensor[(1, 4, 384), float32] = add(%var_210, %v7_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_213: Tensor[(384, 1536), float32] = transpose(%v7_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_215: Tensor[(4, 384), float32] = reshape(%var_211, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_216: Tensor[(1536, 384), float32] = transpose(%var_213, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %11 = nn.dense(%var_215, %var_216, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_217: Tensor[(4, 1536), float32] = nn.bias_add(%11, %v7_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_218: Tensor[(1, 4, 1536), float32] = reshape(%var_217, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_219: Tensor[(1, 4, 1536), float32] = multiply(%var_218, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_220: Tensor[(1, 4, 1536), float32] = erf(%var_219) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_221: Tensor[(1, 4, 1536), float32] = multiply(%var_220, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_222: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_221) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_223: Tensor[(1, 4, 1536), float32] = multiply(%var_218, %var_222) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_225: Tensor[(1536, 384), float32] = transpose(%v7_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_227: Tensor[(4, 1536), float32] = reshape(%var_223, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_228: Tensor[(384, 1536), float32] = transpose(%var_225, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %12 = nn.dense(%var_227, %var_228, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_229: Tensor[(4, 384), float32] = nn.bias_add(%12, %v7_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_231: Tensor[(1, 4, 384), float32] = reshape(%var_229, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_232: Tensor[(1, 4, 384), float32] = multiply(%var_231, %v7_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_234: Tensor[(1, 4, 384), float32] = add(%var_232, %var_208) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_236: Tensor[(1, 4, 384), float32] = multiply(%var_234, %v8_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_238: Tensor[(1, 4, 384), float32] = add(%var_236, %v8_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_240: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_238, %v8_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_242: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_240, %v8_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_243: Tensor[(1, 4, 384), float32] = multiply(%var_242, %v8_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_245: Tensor[(1, 4, 384), float32] = add(%var_243, %var_234) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_247: Tensor[(1, 4, 384), float32] = multiply(%var_245, %v8_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_248: Tensor[(1, 4, 384), float32] = add(%var_247, %v8_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_250: Tensor[(384, 1536), float32] = transpose(%v8_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_252: Tensor[(4, 384), float32] = reshape(%var_248, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_253: Tensor[(1536, 384), float32] = transpose(%var_250, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %13 = nn.dense(%var_252, %var_253, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_254: Tensor[(4, 1536), float32] = nn.bias_add(%13, %v8_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_255: Tensor[(1, 4, 1536), float32] = reshape(%var_254, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_256: Tensor[(1, 4, 1536), float32] = multiply(%var_255, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_257: Tensor[(1, 4, 1536), float32] = erf(%var_256) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_258: Tensor[(1, 4, 1536), float32] = multiply(%var_257, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_259: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_258) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_260: Tensor[(1, 4, 1536), float32] = multiply(%var_255, %var_259) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_262: Tensor[(1536, 384), float32] = transpose(%v8_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_264: Tensor[(4, 1536), float32] = reshape(%var_260, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_265: Tensor[(384, 1536), float32] = transpose(%var_262, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %14 = nn.dense(%var_264, %var_265, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_266: Tensor[(4, 384), float32] = nn.bias_add(%14, %v8_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_268: Tensor[(1, 4, 384), float32] = reshape(%var_266, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_269: Tensor[(1, 4, 384), float32] = multiply(%var_268, %v8_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_271: Tensor[(1, 4, 384), float32] = add(%var_269, %var_245) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_273: Tensor[(1, 4, 384), float32] = multiply(%var_271, %v9_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_275: Tensor[(1, 4, 384), float32] = add(%var_273, %v9_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_277: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_275, %v9_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_279: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_277, %v9_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_280: Tensor[(1, 4, 384), float32] = multiply(%var_279, %v9_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_282: Tensor[(1, 4, 384), float32] = add(%var_280, %var_271) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_284: Tensor[(1, 4, 384), float32] = multiply(%var_282, %v9_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_285: Tensor[(1, 4, 384), float32] = add(%var_284, %v9_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_287: Tensor[(384, 1536), float32] = transpose(%v9_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_289: Tensor[(4, 384), float32] = reshape(%var_285, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_290: Tensor[(1536, 384), float32] = transpose(%var_287, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %15 = nn.dense(%var_289, %var_290, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_291: Tensor[(4, 1536), float32] = nn.bias_add(%15, %v9_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_292: Tensor[(1, 4, 1536), float32] = reshape(%var_291, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_293: Tensor[(1, 4, 1536), float32] = multiply(%var_292, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_294: Tensor[(1, 4, 1536), float32] = erf(%var_293) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_295: Tensor[(1, 4, 1536), float32] = multiply(%var_294, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_296: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_295) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_297: Tensor[(1, 4, 1536), float32] = multiply(%var_292, %var_296) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_299: Tensor[(1536, 384), float32] = transpose(%v9_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_301: Tensor[(4, 1536), float32] = reshape(%var_297, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_302: Tensor[(384, 1536), float32] = transpose(%var_299, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %16 = nn.dense(%var_301, %var_302, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_303: Tensor[(4, 384), float32] = nn.bias_add(%16, %v9_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_305: Tensor[(1, 4, 384), float32] = reshape(%var_303, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_306: Tensor[(1, 4, 384), float32] = multiply(%var_305, %v9_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_308: Tensor[(1, 4, 384), float32] = add(%var_306, %var_282) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_310: Tensor[(1, 4, 384), float32] = multiply(%var_308, %v10_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_312: Tensor[(1, 4, 384), float32] = add(%var_310, %v10_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_314: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_312, %v10_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_316: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_314, %v10_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_317: Tensor[(1, 4, 384), float32] = multiply(%var_316, %v10_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_319: Tensor[(1, 4, 384), float32] = add(%var_317, %var_308) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_321: Tensor[(1, 4, 384), float32] = multiply(%var_319, %v10_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_322: Tensor[(1, 4, 384), float32] = add(%var_321, %v10_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_324: Tensor[(384, 1536), float32] = transpose(%v10_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_326: Tensor[(4, 384), float32] = reshape(%var_322, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_327: Tensor[(1536, 384), float32] = transpose(%var_324, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %17 = nn.dense(%var_326, %var_327, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_328: Tensor[(4, 1536), float32] = nn.bias_add(%17, %v10_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_329: Tensor[(1, 4, 1536), float32] = reshape(%var_328, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_330: Tensor[(1, 4, 1536), float32] = multiply(%var_329, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_331: Tensor[(1, 4, 1536), float32] = erf(%var_330) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_332: Tensor[(1, 4, 1536), float32] = multiply(%var_331, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_333: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_332) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_334: Tensor[(1, 4, 1536), float32] = multiply(%var_329, %var_333) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_336: Tensor[(1536, 384), float32] = transpose(%v10_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_338: Tensor[(4, 1536), float32] = reshape(%var_334, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_339: Tensor[(384, 1536), float32] = transpose(%var_336, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %18 = nn.dense(%var_338, %var_339, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_340: Tensor[(4, 384), float32] = nn.bias_add(%18, %v10_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_342: Tensor[(1, 4, 384), float32] = reshape(%var_340, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_343: Tensor[(1, 4, 384), float32] = multiply(%var_342, %v10_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_345: Tensor[(1, 4, 384), float32] = add(%var_343, %var_319) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_347: Tensor[(1, 4, 384), float32] = multiply(%var_345, %v11_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_349: Tensor[(1, 4, 384), float32] = add(%var_347, %v11_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_351: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_349, %v11_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_353: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_351, %v11_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_354: Tensor[(1, 4, 384), float32] = multiply(%var_353, %v11_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_356: Tensor[(1, 4, 384), float32] = add(%var_354, %var_345) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_358: Tensor[(1, 4, 384), float32] = multiply(%var_356, %v11_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_359: Tensor[(1, 4, 384), float32] = add(%var_358, %v11_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_361: Tensor[(384, 1536), float32] = transpose(%v11_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_363: Tensor[(4, 384), float32] = reshape(%var_359, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_364: Tensor[(1536, 384), float32] = transpose(%var_361, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %19 = nn.dense(%var_363, %var_364, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_365: Tensor[(4, 1536), float32] = nn.bias_add(%19, %v11_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_366: Tensor[(1, 4, 1536), float32] = reshape(%var_365, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_367: Tensor[(1, 4, 1536), float32] = multiply(%var_366, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_368: Tensor[(1, 4, 1536), float32] = erf(%var_367) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_369: Tensor[(1, 4, 1536), float32] = multiply(%var_368, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_370: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_369) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_371: Tensor[(1, 4, 1536), float32] = multiply(%var_366, %var_370) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_373: Tensor[(1536, 384), float32] = transpose(%v11_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_375: Tensor[(4, 1536), float32] = reshape(%var_371, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_376: Tensor[(384, 1536), float32] = transpose(%var_373, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %20 = nn.dense(%var_375, %var_376, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_377: Tensor[(4, 384), float32] = nn.bias_add(%20, %v11_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_379: Tensor[(1, 4, 384), float32] = reshape(%var_377, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_380: Tensor[(1, 4, 384), float32] = multiply(%var_379, %v11_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_382: Tensor[(1, 4, 384), float32] = add(%var_380, %var_356) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_384: Tensor[(1, 4, 384), float32] = multiply(%var_382, %v12_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_386: Tensor[(1, 4, 384), float32] = add(%var_384, %v12_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_388: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_386, %v12_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_390: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_388, %v12_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_391: Tensor[(1, 4, 384), float32] = multiply(%var_390, %v12_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_393: Tensor[(1, 4, 384), float32] = add(%var_391, %var_382) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_395: Tensor[(1, 4, 384), float32] = multiply(%var_393, %v12_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_396: Tensor[(1, 4, 384), float32] = add(%var_395, %v12_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_398: Tensor[(384, 1536), float32] = transpose(%v12_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_400: Tensor[(4, 384), float32] = reshape(%var_396, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_401: Tensor[(1536, 384), float32] = transpose(%var_398, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %21 = nn.dense(%var_400, %var_401, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_402: Tensor[(4, 1536), float32] = nn.bias_add(%21, %v12_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_403: Tensor[(1, 4, 1536), float32] = reshape(%var_402, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_404: Tensor[(1, 4, 1536), float32] = multiply(%var_403, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_405: Tensor[(1, 4, 1536), float32] = erf(%var_404) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_406: Tensor[(1, 4, 1536), float32] = multiply(%var_405, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_407: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_406) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_408: Tensor[(1, 4, 1536), float32] = multiply(%var_403, %var_407) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_410: Tensor[(1536, 384), float32] = transpose(%v12_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_412: Tensor[(4, 1536), float32] = reshape(%var_408, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_413: Tensor[(384, 1536), float32] = transpose(%var_410, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %22 = nn.dense(%var_412, %var_413, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_414: Tensor[(4, 384), float32] = nn.bias_add(%22, %v12_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_416: Tensor[(1, 4, 384), float32] = reshape(%var_414, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_417: Tensor[(1, 4, 384), float32] = multiply(%var_416, %v12_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_419: Tensor[(1, 4, 384), float32] = add(%var_417, %var_393) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_421: Tensor[(1, 4, 384), float32] = multiply(%var_419, %v13_0_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_423: Tensor[(1, 4, 384), float32] = add(%var_421, %v13_0_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_425: Tensor[(1, 4, 384), float32] = nn.conv1d(%var_423, %v13_0_fn_weight) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_427: Tensor[(1, 4, 384), float32] = nn.bias_add(%var_425, %v13_0_fn_bias) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_428: Tensor[(1, 4, 384), float32] = multiply(%var_427, %v13_0_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_430: Tensor[(1, 4, 384), float32] = add(%var_428, %var_419) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_432: Tensor[(1, 4, 384), float32] = multiply(%var_430, %v13_1_affine_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_433: Tensor[(1, 4, 384), float32] = add(%var_432, %v13_1_affine_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_435: Tensor[(384, 1536), float32] = transpose(%v13_1_fn_0_weight, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  let %var_437: Tensor[(4, 384), float32] = reshape(%var_433, newshape=[4, 384]) /* ty=Tensor[(4, 384), float32] */;
  let %var_438: Tensor[(1536, 384), float32] = transpose(%var_435, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  %23 = nn.dense(%var_437, %var_438, units=None) /* ty=Tensor[(4, 1536), float32] */;
  let %var_439: Tensor[(4, 1536), float32] = nn.bias_add(%23, %v13_1_fn_0_bias) /* ty=Tensor[(4, 1536), float32] */;
  let %var_440: Tensor[(1, 4, 1536), float32] = reshape(%var_439, newshape=[1, 4, 1536]) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_441: Tensor[(1, 4, 1536), float32] = multiply(%var_440, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_442: Tensor[(1, 4, 1536), float32] = erf(%var_441) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_443: Tensor[(1, 4, 1536), float32] = multiply(%var_442, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_444: Tensor[(1, 4, 1536), float32] = add(0.5f /* ty=float32 */, %var_443) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_445: Tensor[(1, 4, 1536), float32] = multiply(%var_440, %var_444) /* ty=Tensor[(1, 4, 1536), float32] */;
  let %var_447: Tensor[(1536, 384), float32] = transpose(%v13_1_fn_2_weight, axes=[1, 0]) /* ty=Tensor[(1536, 384), float32] */;
  let %var_449: Tensor[(4, 1536), float32] = reshape(%var_445, newshape=[4, 1536]) /* ty=Tensor[(4, 1536), float32] */;
  let %var_450: Tensor[(384, 1536), float32] = transpose(%var_447, axes=[1, 0]) /* ty=Tensor[(384, 1536), float32] */;
  %24 = nn.dense(%var_449, %var_450, units=None) /* ty=Tensor[(4, 384), float32] */;
  let %var_451: Tensor[(4, 384), float32] = nn.bias_add(%24, %v13_1_fn_2_bias) /* ty=Tensor[(4, 384), float32] */;
  let %var_453: Tensor[(1, 4, 384), float32] = reshape(%var_451, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_454: Tensor[(1, 4, 384), float32] = multiply(%var_453, %v13_1_scale) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_456: Tensor[(1, 4, 384), float32] = add(%var_454, %var_430) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_458: Tensor[(1, 4, 384), float32] = multiply(%var_456, %v14_g) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_459: Tensor[(1, 4, 384), float32] = add(%var_458, %v14_b) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_460: Tensor[(1, 4, 384), float32] = reshape(%var_459, newshape=[1, 4, 384]) /* ty=Tensor[(1, 4, 384), float32] */;
  let %var_461: Tensor[(1, 384), float32] = mean(%var_460, axis=[1]) /* ty=Tensor[(1, 384), float32] */;
  let %var_462: Tensor[(1, 384), float32] = transpose(%var_461, axes=[0, 1]) /* ty=Tensor[(1, 384), float32] */;
  let %var_464: Tensor[(384, 10), float32] = transpose(%v16_weight, axes=[1, 0]) /* ty=Tensor[(384, 10), float32] */;
  let %var_465: Tensor[(1, 384), float32] = reshape(%var_462, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  let %var_466: Tensor[(10, 384), float32] = transpose(%var_464, axes=[1, 0]) /* ty=Tensor[(10, 384), float32] */;
  let %var_468: Tensor[(1, 10), float32] = nn.dense(%var_465, %var_466, units=None) /* ty=Tensor[(1, 10), float32] */;
  add(%var_468, %v16_bias) /* ty=Tensor[(1, 10), float32] */
}
